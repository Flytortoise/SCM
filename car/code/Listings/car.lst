C51 COMPILER V9.01   CAR                                                                   08/09/2017 09:32:07 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE CAR
OBJECT MODULE PLACED IN .\Objects\car.obj
COMPILER INVOKED BY: F:\Keil\Keil5\C51\BIN\C51.EXE app\car.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\app\inc;.\bsp\inc;.\bsp) 
                    -DEBUG OBJECTEXTEND PRINT(.\Listings\car.lst) OBJECT(.\Objects\car.obj)

line level    source

   1          /*=====================================================================//
   2                             循迹、红外避障、遥控综合程序                       //
   3          //  本程序主要将循迹程序、红外避障程序、遥控器程序综合在一起，通过主板按键切换
   4          ，蓝色小主板是右边按键S4切换，如果客户买的是绿色大主板 ，那么就是主板左边的按键S1
   5          切换，数码管显示1，就是循迹模式，按一下按键数码管显示2，就是避障模式，按一下按键
   6          数码管显示3，就是红外遥控程序，周而复始切换模式。
   7          //--------------------------------------------------------------------//
   8          
   9          ******************************************************************/  
  10          
  11          #include <REGX52.H> //包含51单片机相关的头文件
  12          #include <intrins.h>
  13          sbit LeftLed=P2^0;                        //定义前方左侧指示灯端口
  14          sbit RightLed=P0^7;                       //定义前方右侧指示灯端口
  15          sbit FontLled=P1^7;
  16          
  17          sbit LeftIR=P3^5;                         //定义前方左侧红外探头端口
  18          sbit RightIR=P3^6;                        //定义前方右侧红外探头端口
  19          sbit FontIR=P3^7;                         //定义前方正前方红外探头端口
  20          
  21          sbit M1A=P0^0;                            //定义左侧电机驱动A端
  22          sbit M1B=P0^1;                            //定义左侧电机驱动B端
  23          
  24          sbit M2A=P0^2;                            //定义右侧电机驱动A端
  25          sbit M2B=P0^3;                            //定义右侧电机驱动B端
  26          
  27          sbit B1=P0^4;                             //定义语音识识别传感器端口
  28          sbit SB1=P0^6;                            //定义蜂鸣器端口
  29          sbit IRIN=P3^3;                                       //定义红外接收端口
  30          
  31          unsigned char code  LedShowData[]={0x03,0x9F,0x25,0x0D,0x99,  //定义数码管显示数据
  32                                             0x49,0x41,0x1F,0x01,0x19};//0,1,2,3,4,5,6,7,8,9
  33          unsigned char code  RecvData[]={0x19,0x46,0x15,0x43,0x44,0x40,0x0D,0x0E,0x00,0x0F};
  34          unsigned char IRCOM[7];
  35          static unsigned int LedFlash;                         //定义闪动频率计数变量
  36          bit EnableLight=0;                                    //定义指示灯使能位
  37          #define ShowPort P2                                   //定义数码管显示端口
  38          unsigned char temp = 1;
  39          void tingzhi()
  40          {
  41   1         M1A=0;                                   //将M1电机A端初始化为0
  42   1         M1B=0;                                   //将M1电机B端初始化为0
  43   1         M2A=0;                                   //将M2电机A端初始化为0
  44   1         M2B=0;
  45   1      
  46   1      }
  47          
  48          void qianjin()
  49          {
  50   1         M1A=1;                                   
  51   1         M1B=0;                                   
  52   1         M2A=1;                                   
  53   1         M2B=0;
  54   1      }
C51 COMPILER V9.01   CAR                                                                   08/09/2017 09:32:07 PAGE 2   

  55          
  56          void houtui()
  57          {
  58   1         M1A=0;                                   
  59   1         M1B=1;                                   
  60   1         M2A=0;                                   
  61   1         M2B=1;
  62   1      }
  63          
  64          void zuozhuan()
  65          {
  66   1         M1A=0;                                   
  67   1         M1B=1;                                   
  68   1         M2A=1;                                   
  69   1         M2B=0;
  70   1      }
  71          
  72          void youzhuan()
  73          {
  74   1         M1A=1;                                   
  75   1         M1B=0;                                   
  76   1         M2A=0;                                   
  77   1         M2B=1;
  78   1      }
  79          
  80          void Delay1ms(unsigned int i) 
  81          { 
  82   1      unsigned char j,k; 
  83   1      do{ 
  84   2        j = 10; 
  85   2        do{ 
  86   3         k = 50; 
  87   3         do{ 
  88   4          _nop_(); 
  89   4         }while(--k);     
  90   3        }while(--j); 
  91   2      }while(--i); 
  92   1      
  93   1      } 
  94          
  95          void delay_nus(unsigned int i)  //延时:i>=12 ,i的最小延时单12 us
  96          { 
  97   1        i=i/10;
  98   1        while(--i);
  99   1      }   
 100          void delay_nms(unsigned int n)  //延时n ms
 101          { 
 102   1        n=n+1;
 103   1        while(--n)  
 104   1        delay_nus(900);         //延时 1ms,同时进行补偿
 105   1        
 106   1      }  
 107          
 108          void delayms(unsigned char x)                         //0.14mS延时程序
 109          {
 110   1        unsigned char i;                                    //定义临时变量
 111   1        while(x--)                                          //延时时间循环
 112   1        {
 113   2          for (i = 0; i<13; i++) {}                         //14mS延时
 114   2        }
 115   1      }
 116          
C51 COMPILER V9.01   CAR                                                                   08/09/2017 09:32:07 PAGE 3   

 117          void Delay()                                          //定义延时子程序
 118          { 
 119   1        unsigned int DelayTime=30000;                       //定义延时时间变量
 120   1        while(DelayTime--);                                 //开始进行延时循环
 121   1        return;                                             //子程序返回
 122   1      }
 123          void ControlCar(unsigned char ConType)    //定义电机控制子程序
 124          {
 125   1       
 126   1        tingzhi();
 127   1       switch(ConType)                          //判断用户设定电机形式
 128   1       {
 129   2        case 1:  //前进                         //判断用户是否选择形式1
 130   2        { 
 131   3          //tingzhi();                                                      //进入前进之前 先停止一段时间  防止电机反向电压冲击主板 导致系统复位
 132   3              //Delay1ms(50);
 133   3              LeftLed = 0 ;
 134   3              qianjin();
 135   3          break;
 136   3        }
 137   2        case 2: //后退                          //判断用户是否选择形式2
 138   2        { 
 139   3         // tingzhi();                                                              //进入后退之前 先停止一段时间  防止电机反向电压冲击主板 导致系统复位
 140   3         // Delay1ms(50);
 141   3          LeftLed = 1 ;        
 142   3              houtui();                                //M2电机反转
 143   3          break;
 144   3        }
 145   2        case 3: //左转                          //判断用户是否选择形式3
 146   2        { 
 147   3           //tingzhi();                                                                 //进入左转之前 先停止一段时间  防止电机反向电压冲击主板 导致系统复位
 148   3              // Delay1ms(50); 
 149   3               zuozhuan();                               //M2电机正转
 150   3               break;
 151   3        }
 152   2        case 4: //右转                          //判断用户是否选择形式4
 153   2        { 
 154   3         // tingzhi();                                                                  //进入右转之前 先停止一段时间  防止电机反向电压冲击主板 导致系统复位
 155   3      //      Delay1ms(50);
 156   3              youzhuan();                                //M1电机正转
 157   3                                                //M2电机反转
 158   3              break;
 159   3        }
 160   2        case 8: //停止                          //判断用户是否选择形式8
 161   2        {
 162   3          tingzhi();
 163   3              break;                                //退出当前选择
 164   3        }
 165   2       }
 166   1      }
 167          
 168          void ControlCar_yaokong(unsigned char ConType)    //定义电机控制子程序  (红外遥控单独设置一个 switch  case 
             - 语句  )
 169          {
 170   1       
 171   1        tingzhi();
 172   1       switch(ConType)                          //判断用户设定电机形式
 173   1       {
 174   2        case 1:  //前进                         //判断用户是否选择形式1
 175   2        { 
 176   3          tingzhi();                                                //进入前进之前 先停止一段时间  防止电机反向电压冲击主板 导致系统复位
 177   3              Delay1ms(150);
C51 COMPILER V9.01   CAR                                                                   08/09/2017 09:32:07 PAGE 4   

 178   3              LeftLed = 0 ;
 179   3              qianjin();
 180   3          break;
 181   3        }
 182   2        case 2: //后退                          //判断用户是否选择形式2
 183   2        { 
 184   3          tingzhi();                                                        //进入后退之前 先停止一段时间  防止电机反向电压冲击主板 导致系统复位
 185   3          Delay1ms(150);
 186   3          LeftLed = 1 ;        
 187   3              houtui();                                //M2电机反转
 188   3          break;
 189   3        }
 190   2        case 3: //左转                          //判断用户是否选择形式3
 191   2        { 
 192   3           tingzhi();                                                           //进入左转之前 先停止一段时间  防止电机反向电压冲击主板 导致系统复位
 193   3               Delay1ms(150); 
 194   3               zuozhuan();                               //M2电机正转
 195   3               break;
 196   3        }
 197   2        case 4: //右转                          //判断用户是否选择形式4
 198   2        { 
 199   3           tingzhi();                                                           //进入右转之前 先停止一段时间  防止电机反向电压冲击主板 导致系统复位
 200   3               Delay1ms(150);
 201   3           youzhuan();                                //M1电机正转  //M2电机反转
 202   3               break;
 203   3        }
 204   2        case 8: //停止                          //判断用户是否选择形式8
 205   2        {
 206   3          tingzhi();
 207   3              break;                                //退出当前选择
 208   3        }
 209   2       }
 210   1      }
 211          void Robot_Avoidance()                   //机器人避障子程序
 212          {
 213   1      
 214   1         LeftLed=LeftIR;                        //前方左侧指示灯指示出前方左侧红外探头状态
 215   1         RightLed=RightIR;                      //前方右侧指示灯指示出前方右侧红外探头状态
 216   1         FontLled= FontIR; 
 217   1         SB1=FontIR;
 218   1      
 219   1          if(FontIR == 0)                          //如果前面避障传感器检测到障碍物
 220   1         {
 221   2            ControlCar(8);                       //停止
 222   2            delay_nms (300);                                     //停止300MS   防止电机反相电压冲击  导致系统复位
 223   2                ControlCar(2);                                           //后退  
 224   2                delay_nms (1000);                                        //后退1500MS  
 225   2                ControlCar(3);                                           //
 226   2                delay_nms (1800);     
 227   2        }
 228   1         else
 229   1         {
 230   2            ControlCar(1);                      //右侧没有信号时,开始向左转一定的角度
 231   2            delay_nms (10);
 232   2         }
 233   1          ControlCar(1);
 234   1      }
 235          //机器人循迹子程序
 236          void Robot_Traction()                     //机器人循迹子程序
 237          {
 238   1         LeftLed=LeftIR;                        //前方左侧指示灯指示出前方左侧红外探头状态
 239   1         RightLed=RightIR;                      //前方右侧指示灯指示出前方右侧红外探头状态
C51 COMPILER V9.01   CAR                                                                   08/09/2017 09:32:07 PAGE 5   

 240   1         FontLled= FontIR; 
 241   1         SB1=LeftIR;
 242   1         if(LeftIR == 0 && RightIR == 0)    //三个红外检测到黑线，就前进
 243   1         {
 244   2            ControlCar(1);                     
 245   2            delay_nms (10);
 246   2         }
 247   1         
 248   1         else if(LeftIR == 0 && RightIR == 1)          //左侧没有信号时，开始向右转一定的角度
 249   1         {
 250   2            ControlCar(3);                      
 251   2            delay_nms (10);
 252   2         }
 253   1      
 254   1         else if(LeftIR == 1 && RightIR == 0)         //右侧没有信号时,开始向左转一定的角度
 255   1         {
 256   2            ControlCar(4);                      
 257   2            delay_nms (10);
 258   2         }
 259   1          ControlCar(8);
 260   1      }
 261          
 262          void main()                               //主程序入口
 263          {
 264   1        
 265   1        bit RunFlag=0;                          //定义小车运行标志位
 266   1        LedFlash=3000;                                       //对闪灯数据进行初始化
 267   1        //EX1=1;                                               //同意开启外部中断1
 268   1        IT1=1;                                               //设定外部中断1为低边缘触发类型
 269   1        EA=1;                                                //总中断开启
 270   1        ControlCar(8);                          //初始化小车运行状态
 271   1        while(1)                                //程序主循环
 272   1        {
 273   2                if(P3_2 == 0)
 274   2                {
 275   3                 delay_nms(10);
 276   3                 if(P3_2 == 0)
 277   3                 {
 278   4                        temp++;
 279   4                        while(!P3_2);
 280   4                 }
 281   3                }
 282   2                if(temp > 3)
 283   2                {
 284   3                temp = 1;
 285   3                }
 286   2                switch(temp)
 287   2                {
 288   3                      case 1: ShowPort = LedShowData[1];Robot_Traction();EX1 = 0;break;
 289   3                      case 2: ShowPort = LedShowData[2];Robot_Avoidance();EX1 = 0;break;
 290   3                      case 3: ShowPort = LedShowData[3];EX1 = 1;break;
 291   3                }
 292   2        }
 293   1      }
 294          //----------红外遥控-------------------------------------------------------------
 295          void IR_IN() interrupt 2 using 0                      //定义INT2外部中断函数
 296          {
 297   1        unsigned char j,k,N=0;                              //定义临时接收变量
 298   1         
 299   1        EX1 = 0;                                            //关闭外部中断,防止再有信号到达   
 300   1        delayms(15);                                        //延时时间，进行红外消抖
 301   1        if (IRIN==1)                                        //判断红外信号是否消失
C51 COMPILER V9.01   CAR                                                                   08/09/2017 09:32:07 PAGE 6   

 302   1        {  
 303   2           EX1 =1;                                          //外部中断开
 304   2               return;                                          //返回
 305   2        } 
 306   1                                 
 307   1        while (!IRIN)                                       //等IR变为高电平，跳过9ms的前导低电平信号。
 308   1        {
 309   2            delayms(1);                                     //延时等待
 310   2        }
 311   1      
 312   1        for (j=0;j<4;j++)                                   //采集红外遥控器数据
 313   1        { 
 314   2          for (k=0;k<8;k++)                                 //分次采集8位数据
 315   2          {
 316   3             while (IRIN)                                   //等 IR 变为低电平，跳过4.5ms的前导高电平信号。
 317   3             {
 318   4               delayms(1);                                  //延时等待
 319   4             }
 320   3             
 321   3             while (!IRIN)                                  //等 IR 变为高电平
 322   3             {
 323   4               delayms(1);                                  //延时等待
 324   4             }
 325   3         
 326   3             while (IRIN)                                   //计算IR高电平时长
 327   3             {
 328   4               delayms(1);                                  //延时等待
 329   4               N++;                                         //计数器加加
 330   4               if (N>=30)                                   //判断计数器累加值
 331   4                   { 
 332   5                 EX1=1;                                     //打开外部中断功能
 333   5                     return;                                    //返回 
 334   5               }                   
 335   4             }
 336   3                                             
 337   3            IRCOM[j]=IRCOM[j] >> 1;                         //进行数据位移操作并自动补零
 338   3           
 339   3            if (N>=8)                                       //判断数据长度 
 340   3            {
 341   4               IRCOM[j] = IRCOM[j] | 0x80;                  //数据最高位补1
 342   4            } 
 343   3            N=0;                                            //清零位数计录器
 344   3          }
 345   2        }
 346   1         
 347   1        if (IRCOM[2]!=~IRCOM[3])                            //判断地址码是否相同
 348   1        { 
 349   2           EX1=1;                                           //打开外部中断
 350   2           return;                                          //返回
 351   2        }
 352   1      
 353   1        for(j=0;j<10;j++)                                   //循环进行键码解析
 354   1         {
 355   2            if(IRCOM[2]==RecvData[j])                       //进行键位对应
 356   2            {
 357   3             // ControlCar(j);
 358   3                      ControlCar_yaokong(j);                               //数码管显示相应数码
 359   3            }
 360   2         } 
 361   1         EX1 = 1;                                           //外部中断开 
 362   1      } 
 363          //------------------------------------------------------------------------------------------------------- 
C51 COMPILER V9.01   CAR                                                                   08/09/2017 09:32:07 PAGE 7   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    652    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
